---
title: "data analysis lab"
author: "Sami Kader-Yettefti"
format: html
code-fold: true
---

# Lab work

The URL to my fork is: 

<https://github.com/kaderrsami/r-101-grade-analysis>

```{r setup1, include=FALSE}
here::i_am("r-101-grade-analysis.Rproj")

library(here)
library(vroom)
library(ggplot2)
library(dplyr)
library(tidyr)
library(knitr)
library(stringr)

theme_set(theme_bw())
```

### question 1

```{r setup2}
grades <- vroom(here("grades.csv"))
```

### question 2

```{r}
exam_stats <- grades %>% 
  summarise(
            Min = min(Exam, na.rm = TRUE),
            Max = max(Exam, na.rm = TRUE),
            Median = median(Exam, na.rm = TRUE),
            Mean = mean(Exam, na.rm = TRUE))
```

```{r table1, results='asis'}
kable(exam_stats, caption = "Statistics for Exam Grades")
```

### question 3

```{r}
num_missing_exam <- grades %>%
  filter(is.na(Exam)) %>%
  summarise(Count = n()) %>%
  pull(Count)
```

A total of `r num_missing_exam` students did not take the final exam.

### question 4

```{r bar_exam_grades}
filtered_grades <- grades %>% filter(!is.na(Exam))

ggplot(filtered_grades, aes(x=Exam)) +
  geom_bar() +
  ggtitle("Bar Plot for Exam Grades") +
  xlab("Exam Grades") +
  ylab("Count")
```

### question 5

```{r}
group_counts <- grades %>%
  group_by(Group) %>%
  summarise(Count = n())
```

```{r table2, results='asis'}
kable(group_counts, caption = "Count for Exam Grades")
```

### question 6

```{r bar_count}
ggplot(group_counts, aes(x=Group, y=Count)) +
  geom_bar(stat="identity") +
  ggtitle("Number of Students in Each Group") +
  xlab("Group") +
  ylab("Number of Students") +
  theme(axis.text.x = element_text(angle = 42, hjust = 1))
```

### question 7

Representation of the distribution of the grades at the `Exam` conditioned by the group


```{r facet}
ggplot(filtered_grades, aes(x=Exam)) +
  geom_bar() +
  facet_wrap(~Group) +
  ggtitle("Distribution of Exam Grades by Group") +
  xlab("Exam Grades") +
  ylab("Frequency")
```

An other epresentation of the distribution of the grades at the `Exam` conditioned by the group

```{r box}
ggplot(filtered_grades, aes(x=Group, y=Exam)) +
  geom_boxplot() +
  ggtitle("Distribution of Exam Grades by Group (Boxplot)") +
  xlab("Group") +
  ylab("Exam Grades") +
  theme(axis.text.x = element_text(angle = 42, hjust = 1))
```
# Homework

### question 8

```{r}
missed_exam_counts <- grades %>%
  group_by(Group) %>%
  summarise(Missed_Exam_Count = sum(is.na(Exam)))
```

```{r table3, results='asis'}
knitr::kable(missed_exam_counts, caption = "Number of Students Who Missed the Exam in Each Group")
```

### question 9

```{r missed_exam_count}
ggplot(missed_exam_counts, aes(x=Group, y=Missed_Exam_Count)) +
  geom_col() +
  ggtitle("Number of Students Who Missed the Exam by Group") +
  xlab("Group") +
  ylab("Number of Students") +
  theme(axis.text.x = element_text(angle = 42, hjust = 1))
```

### question 10

```{r}
long_format_grades <- grades %>%
  pivot_longer(cols = -c(Id, Group), names_to = "name", values_to = "value")
```

### question 11

```{r}
missing_grades_count <- long_format_grades %>%
  group_by(Id) %>%
  summarise(Missing_Grades = sum(is.na(value)))
```

### question 12

```{r distrib_miss_grades_student}
ggplot(missing_grades_count, aes(x=Missing_Grades)) +
  geom_histogram(binwidth=1, fill="blue", color="black") +
  ggtitle("Distribution of Number of Missing Grades Per Student") +
  xlab("Number of Missing Grades") +
  ylab("Number of Students")
```

### question 13

```{r}
students_missed_exam_by_group <- long_format_grades %>%
  filter(name == "Exam") %>%
  group_by(Group) %>%
  summarise(Students_Missed_Exam = sum(is.na(value)))
```

### question 14

```{r}
missing_online_tests_by_student <- long_format_grades %>%
  filter(str_starts(name, "Online_MCQ")) %>%
  group_by(Id) %>%
  summarise(Missing_Online_Tests = sum(is.na(value)))
```

### question 15

```{r kable_missed_count}
merged_df <- grades %>%
  rowwise() %>%
  mutate(missing_exam = sum(is.na(Exam)),
         missing_online_tests = sum(is.na(c_across(starts_with("Online_MCQ"))))) %>%
  ungroup()

filtered_df <- merged_df %>%
  filter((missing_exam == missing_online_tests) | (missing_exam == 0)) %>%
  mutate(Exam_status = ifelse(is.na(Exam), "Missed Exam", "Taken Exam"))

summary_count <- filtered_df %>%
  group_by(missing_online_tests) %>%
  summarise(total_students = n())

ktable <- knitr::kable(summary_count, 
                       col.names = c("Number of Missing Online Tests", 
                                     "Total Students Missing Online Tests"),
                       caption = "Enhanced Summary Statistics for Missing Exams")
```
Summary Statistics for Missing Exams
The number of students who missed the exam based on the number of matching missing online tests is as follows:

`r ktable`

The table illustrates how many students missed the exams for each level of missing online tests. This helps to visually analyze the association between missing online tests and missing exams.

```{r ditrib_online_miss_class}
ggplot(data = filter(filtered_df, !is.na(Exam)),
       aes(x = as.factor(missing_online_tests), y = Exam)) +
  geom_boxplot() +
  ggtitle("Distribution of Exam Grades by Number of Matching Missing Online Test Grades") +
  xlab("Number of Missing Online Test Grades") +
  ylab("Exam Grade") +
  theme(panel.grid.major = element_line(linetype = "dashed"),
        legend.position = "none")
```

### question 16

```{r kable_missed_mcq}
student_missed_MCQ <- grades %>%
  rowwise() %>%
  mutate(Missed = any(is.na(c_across(starts_with("MCQ"))))) %>%
  ungroup() %>%
  select(Id, Missed)

ktable2 <- knitr::kable(student_missed_MCQ, 
                   col.names = c("Student ID", "Missed MCQ"),
                   caption = "Students Missing At Least One MCQ")
```

`r ktable2`

### question 17

```{r}
students_missed_MCQ <- grades %>%
  rowwise() %>%
  mutate(Missed = any(is.na(c_across(starts_with("MCQ"))))) %>%
  ungroup()

group_missed_percentage <- students_missed_MCQ %>%
  group_by(Group) %>%
  summarise(Total_Students = n(),
            Missed_Count = sum(Missed, na.rm = TRUE),
            P_missed = (Missed_Count / Total_Students) * 100) %>%
  select(Group, P_missed)

ktable3 <- knitr::kable(group_missed_percentage, 
                  col.names = c("Group", "Percentage of Students Missed MCQ"),
                  caption = "Percentage of Students in Each Group Who Missed At Least One MCQ")
```

`r ktable3`

### question 18

```{r percent_scatter}
students_missed_MCQ <- grades %>%
  rowwise() %>%
  mutate(Missed = any(is.na(c_across(starts_with("MCQ"))))) %>%
  ungroup()

group_missed_percentage <- students_missed_MCQ %>%
  group_by(Group) %>%
  summarise(Total_Students = n(),
            Missed_Count = sum(Missed, na.rm = TRUE),
            P_missed = (Missed_Count / Total_Students) * 100)

average_exam_by_group <- grades %>%
  group_by(Group) %>%
  summarise(Avg_Exam_Grade = mean(Exam, na.rm = TRUE))

merged_data <- inner_join(average_exam_by_group, group_missed_percentage, by = "Group")

ggplot(data = merged_data, aes(x = P_missed, y = Avg_Exam_Grade)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  ggtitle("Average Exam Grade by Percentage of Missed MCQ") +
  xlab("Percentage of Missed MCQ Grades") +
  ylab("Average Exam Grade")
```
```{r percent_barplot}
ggplot(data = merged_data, aes(x = as.factor(Group), y = Avg_Exam_Grade, fill = P_missed)) +
  geom_bar(stat = "identity") +
  scale_fill_gradient(low = "blue", high = "red") +
  ggtitle("Average Exam Grade by Group and Percentage of Missed MCQ") +
  xlab("Group") +
  ylab("Average Exam Grade") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```
Comparison of Average Exam Grades and Percentage of Missed MCQs by Group:

```{r av_ex_grad_&_percent}
# Create the initial ggplot object
p <- ggplot(data = merged_data, aes(x = as.factor(Group))) +
  geom_bar(aes(y = Avg_Exam_Grade), stat = "identity", color = "black") +
  scale_y_continuous(name = "Average Exam Grade", sec.axis = sec_axis(~ . / 10, name = "Percentage of Missed MCQ")) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Add the points for the percentage missed with a second y-axis
p + geom_point(aes(y = P_missed / 10), color = "red")
```

